/*Promesas y Observadores*/
Ambos sirven para trabajar tareas asíncronas

Promesas:
Trabajan con un único flujo de datos
Se usan con una únida data asíncrona de respuesta
No es muy simple de cancelar

Observables:
Trabajan con un flujo continuo de datos
Al fallar puedes ejecturar comandos y reintentar continuar con el observer
Se pueden encadenar operadores adicionales como el map,forEach,reduce,filter y más
Existen otros operadores potentes como el retry() o el replay()?
Pueden ser creados desde otras fuentes como los eventos
Son funciones a las cuales podemos suscribirnos en multiples lugares